import type { CancelablePromise } from "../core/CancelablePromise";
import type { BaseHttpRequest } from "../core/BaseHttpRequest";
export declare class ServerXpService {
    readonly httpRequest: BaseHttpRequest;
    constructor(httpRequest: BaseHttpRequest);
    /**
     * Award XP to a member
     * @returns any Success
     * @throws ApiError
     */
    serverXpForUserCreate({ serverId, userId, requestBody, }: {
        serverId: string;
        /**
         * Member ID to award XP to
         */
        userId: string | "@me";
        requestBody: {
            /**
             * The amount of XP to award
             */
            amount: number;
        };
    }): CancelablePromise<{
        /**
         * The total XP after this operation
         */
        total: number;
    }>;
    /**
     * Set a member's XP
     * @returns any Success
     * @throws ApiError
     */
    serverXpForUserUpdate({ serverId, userId, requestBody, }: {
        serverId: string;
        /**
         * Member ID to set XP to
         */
        userId: string | "@me";
        requestBody: {
            /**
             * The total XP to set on the user
             */
            total: number;
        };
    }): CancelablePromise<{
        /**
         * The total XP after this operation
         */
        total: number;
    }>;
    /**
     * Award XP to role
     * Award XP to all members with a particular role.
     * @returns void
     * @throws ApiError
     */
    serverXpForRoleCreate({ serverId, roleId, requestBody, }: {
        serverId: string;
        /**
         * Role ID to award XP to
         */
        roleId: number;
        requestBody: {
            /**
             * The amount of XP to award
             */
            amount: number;
        };
    }): CancelablePromise<void>;
}
//# sourceMappingURL=ServerXpService.d.ts.map