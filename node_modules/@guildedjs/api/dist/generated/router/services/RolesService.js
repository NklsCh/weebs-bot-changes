"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RolesService = void 0;
class RolesService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Get a role
     * @returns any Success
     * @throws ApiError
     */
    roleRead({ serverId, roleId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/servers/{serverId}/roles/{roleId}",
            path: {
                serverId: serverId,
                roleId: roleId,
            },
        });
    }
    /**
     * Delete a role
     * @returns any Success
     * @throws ApiError
     */
    roleDelete({ serverId, roleId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/servers/{serverId}/roles/{roleId}",
            path: {
                serverId: serverId,
                roleId: roleId,
            },
        });
    }
    /**
     * Update a role
     * @returns any Success
     * @throws ApiError
     */
    roleUpdate({ serverId, roleId, requestBody, }) {
        return this.httpRequest.request({
            method: "PATCH",
            url: "/servers/{serverId}/roles/{roleId}",
            path: {
                serverId: serverId,
                roleId: roleId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Get roles
     * @returns any Success
     * @throws ApiError
     */
    roleReadMany({ serverId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/servers/{serverId}/roles",
            path: {
                serverId: serverId,
            },
        });
    }
    /**
     * Create a role
     * @returns any Success
     * @throws ApiError
     */
    roleCreate({ serverId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/servers/{serverId}/roles",
            path: {
                serverId: serverId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Update a role permission
     * @returns any Success
     * @throws ApiError
     */
    rolePermissionUpdate({ serverId, roleId, requestBody, }) {
        return this.httpRequest.request({
            method: "PATCH",
            url: "/servers/{serverId}/roles/{roleId}/permissions",
            path: {
                serverId: serverId,
                roleId: roleId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
}
exports.RolesService = RolesService;
//# sourceMappingURL=RolesService.js.map